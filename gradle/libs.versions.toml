[versions]

# Kotlin...
kotlin = "1.9.21"
kotlinxDateTimeVersion = "0.4.0"

# Compose...
compose = "1.5.4"
compose-compiler = "1.5.4"
compose-material3 = "1.1.2"
jetBrainsComposeVersion = "1.5.11"

# Android...
androidx-activityCompose = "1.8.2"
androidxCoreVersion = "1.12.0"
appCompatVersion = "1.6.1"
splashScreenApiVersion = "1.0.1"
agp = "8.2.1"

# Moko...
mokoMvvmVersion = "0.16.1"
mokoResourcesVersion = "0.22.3"

# SQLDelight...
sqlDelightVersion = "2.0.1"

# Voyager...
voyagerVersion = "1.0.0"

# Google...
googleServicesVersion = "4.4.0"
firebaseCrashlyticsVersion = "2.9.9"
firebasePerformanceVersion = "1.4.2"
firebaseBOMVersion = "32.7.0"
gmsPlayServicesVersion = "20.7.0"
secretsGradlePlugin = "2.0.1"
googleGeminiVersion = "0.1.2"

# Timber...
timberVersion = "5.0.1"

# Koin...
koinVersion = "3.5.3"
koinAnnotationsVersion = "1.3.0"

# MockK...
mockKVersion = "1.13.8"

# Kotlin Coroutines (Test)...
kotlinCoroutinesTestingVersion = "1.7.3"

# Robolectric...
robolectricVersion = "4.11.1"

[libraries]

# Android...
androidx-core = { module = "androidx.core:core", version.ref = "androidxCoreVersion" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
app-compat = { module = "androidx.appcompat:appcompat", version.ref = "appCompatVersion" }
splash-screen = { module = "androidx.core:core-splashscreen", version.ref = "splashScreenApiVersion" }

# Compose...
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }

# Moko...
moko-mvvm-core = { module = "dev.icerock.moko:mvvm-core", version.ref = "mokoMvvmVersion" }
moko-mvvm-compose = { module = "dev.icerock.moko:mvvm-compose", version.ref = "mokoMvvmVersion" }
moko-mvvm-flow = { module = "dev.icerock.moko:mvvm-flow", version.ref = "mokoMvvmVersion" }
moko-mvvm-flow-compose = { module = "dev.icerock.moko:mvvm-flow-compose", version.ref = "mokoMvvmVersion" }
moko-resources = { module = "dev.icerock.moko:resources", version.ref = "mokoResourcesVersion" }

# SQLDelight...
sql-delight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqlDelightVersion" }
sql-delight-android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelightVersion" }
sql-delight-coroutines-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelightVersion" }
sql-delight-driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelightVersion" }

# Kotlin Date-Time...
kotlinx-date-time = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDateTimeVersion" }

# Voyager...
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyagerVersion" }
voyager-bottomSheetNavigator = { module = "cafe.adriel.voyager:voyager-bottom-sheet-navigator", version.ref = "voyagerVersion" }

# Google...
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBOMVersion" }
firebase-cloud-firestore = { group = "com.google.firebase", name = "firebase-firestore" }
firebase-analytics = { group = "com.google.firebase", name = "firebase-analytics" }
firebase-cloud-messaging = { group = "com.google.firebase", name = "firebase-messaging" }
firebase-performance = { group = "com.google.firebase", name = "firebase-perf" }
firebase-authentication = { group = "com.google.firebase", name = "firebase-auth" }
gms-play-services = { module = "com.google.android.gms:play-services-auth", version.ref = "gmsPlayServicesVersion" }
google-gemini = { module = "com.google.ai.client.generativeai:generativeai", version.ref = "googleGeminiVersion" }

# Timber...
timber = { module = "com.jakewharton.timber:timber", version.ref = "timberVersion" }

# Koin...
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koinVersion" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koinVersion" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koinVersion" }
koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koinAnnotationsVersion" }

# MockK...
mockK = { module = "io.mockk:mockk", version.ref = "mockKVersion" }

# Kotlin Test...
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

# Kotlin Coroutines (Test)...
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinCoroutinesTestingVersion" }

# Robolectric...
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectricVersion" }

[plugins]

# Android...
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }

# Kotlin...
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }

# Compose...
jetBrainsCompose = { id = "org.jetbrains.compose", version.ref = "jetBrainsComposeVersion" }

# SQLDelight...
sql-delight = { id = "app.cash.sqldelight", version.ref = "sqlDelightVersion" }

# Google...
com-google-gms-google-services = { id = "com.google.gms.google-services", version.ref = "googleServicesVersion" }
com-google-firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebaseCrashlyticsVersion" }
com-google-firebase-performance = { id = "com.google.firebase.firebase-perf", version.ref = "firebasePerformanceVersion" }
com-google-android-libraries-mapsplatform-secrets-gradle-plugin = { id = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin", version.ref = "secretsGradlePlugin" }

# Moko...
moko-resources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "mokoResourcesVersion" }